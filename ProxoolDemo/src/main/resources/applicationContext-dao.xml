<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.2.xsd">

   <!-- 配置数据源 -->  
   <bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName">  
            <value>org.logicalcobwebs.proxool.ProxoolDriver</value>  
        </property>  
        <property name="url">  
            <value>proxool.bmsdbv2</value>  
        </property>  
    </bean>

	<!-- sqlSessinFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:sqlMapConfig.xml" />
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="dataSource" />
        
        <property name="mapperLocations" value="classpath:mappers/*.xml" />
    </bean>
    
    <!-- mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开  -->
        <property name="basePackage" value="com.johnfnash.study.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
     
    <!-- 事务管理器
         对mybatis操作数据库事务控制，spring使用jdbc的事务控制类
      -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>    
    </bean>
    
    <!-- 通知  -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <!-- 可以变相的规范程序员的命名，例如以save开头，update开头等，不能想怎么命名就怎么命名 -->
            <tx:method name="save*" propagation="REQUIRED"/><!-- 要求 -->
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/> <!-- 支持，如果没有就算了 -->
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    
    <!-- aop -->
    <aop:config>
        <!-- 切入点为joanna.yan.ssm.service.impl包下所有类的所有方法，不管里面什么参数 -->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.johnfnash.study.service.impl.*.*(..))"/>
    </aop:config>
</beans>        